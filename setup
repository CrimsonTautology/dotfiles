#!/usr/bin/env sh
exit 1

# execute current line in bash from vim
# :.w !bash


# download dotfiles
mkdir -p ~/bin
git clone git@github.com:CrimsonTautology/dotfiles.git ~/bin/dotfiles
git clone git@github.com:CrimsonTautology/scripts.git ~/bin/scripts
git clone git@github.com:CrimsonTautology/junk-drawer.git ~/junk-drawer


# setup vim
ln -sf ~/bin/dotfiles/vim/vimrc ~/.vimrc
vim -es -u ~/bin/dotfiles/vim/vimrc -i NONE -c "PlugInstall" -c "qa"


# symlink/copy over configuration files
ln -sf ~/bin/dotfiles/bash/_dircolors ~/.dircolors
ln -sf ~/bin/dotfiles/bash/_inputrc ~/.inputrc
cp ~/bin/dotfiles/git/_gitconfig ~/.gitconfig
ln -sf ~/bin/dotfiles/ruby/_rspec ~/.rspec
ln -sf ~/bin/dotfiles/tmux/_tmux.conf ~/.tmux.conf
ln -sf ~/bin/dotfiles/lynx/_lynxrc ~/.lynxrc

echo ". ~/bin/dotfiles/bash/_bashrc" >> ~/.bashrc


# setup ssh
mkdir -p ~/.ssh
chmod 700 ~/.ssh
ssh-keygen -t rsa -b 2048 -C "<comment>"
chmod 600 ~/.ssh/id_rsa
chmod 644 ~/.ssh/id_rsa.pub
chmod 644 ~/.ssh/authorized_keys
chmod 644 ~/.ssh/known_hosts
chmod 644 ~/.ssh/config


# setup python
sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \
  libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
  libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev

curl https://pyenv.run | bash
echo ". ~/bin/dotfiles/python/pyenv.sh" >> ~/.bashrc
# restart needed
pyenv update
pyenv install --list
# pyenv install {version}
# pyenv global {version}

# unintall all existing pip packages
pip freeze | xargs pip uninstall -y

# install general development pip packages
pip install -r ~/bin/dotfiles/python/development.txt

ln -sf ~/bin/dotfiles/python/ipython_config.py ~/.ipython/profile_default/ipython_config.py
ln -sf ~/bin/dotfiles/python/_flake8 ~/.flake8


# setup node.js
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
echo ". ~/bin/dotfiles/node/nvm.sh" >> ~/.bashrc
# restart needed
nvm install --lts

npm install -g typescript
npm install -g @angular/cli
